/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game.gui;

import game.config.AISettings;
import static game.config.AISettingsLoader.*;
import java.awt.Frame;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import static util.Paths.*;

/**
 *
 * @author filipe
 */
public class GameOptions extends javax.swing.JDialog {

    private ImageIcon figureNormal;
    private ImageIcon figureGrayed;
    private AISettings settings;
    
    /**
     * Creates new form GameOptions
     */
    private GameOptions(java.awt.Frame parent, boolean modal, AISettings previousSettings) {
        super(parent, modal);
        settings = previousSettings;
        initComponents();
        prepareWindowFeatures();
        loadSpinnersValues();
        centralize(parent);
    }
    
    private void prepareWindowFeatures() {
        try {
            figureNormal = new ImageIcon(ImageIO.read(new File(IMAGES_DIR + "bias.png")).getScaledInstance(348, 200, Image.SCALE_SMOOTH));
            figureGrayed = new ImageIcon(ImageIO.read(new File(IMAGES_DIR + "bias_gray.png")).getScaledInstance(348, 200, Image.SCALE_SMOOTH));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        setCustomSettingsComponentsStates(false);
    }
    
    private void centralize(java.awt.Frame parent) {
        setLocationRelativeTo(parent);
        setVisible(true);
    }
    
    private void setDefaultSettingsComponentStates(boolean isEnabled) {
        radioEasy.setEnabled(isEnabled);
        radioNormal.setEnabled(isEnabled);
        radioHard.setEnabled(isEnabled);
        radioInsane.setEnabled(isEnabled);
    }
    
    private void setCustomSettingsComponentsStates(boolean isEnabled) {
        checkOverrideAIConfig.setSelected(isEnabled);
        labelFigure.setEnabled(isEnabled);
        if (isEnabled) {
            labelFigure.setIcon(figureNormal);
            labelOverride.setText("* this settings will be overriden.");
        } else {
            labelFigure.setIcon(figureGrayed);
            labelOverride.setText("");
        }
        
        labelSteps.setEnabled(isEnabled);
        labelBias1.setEnabled(isEnabled);
        labelBias2.setEnabled(isEnabled);
        labelBias3.setEnabled(isEnabled);
        labelBias4.setEnabled(isEnabled);
        labelBias5.setEnabled(isEnabled);
        
        spinnerSteps.setEnabled(isEnabled);
        spinnerBias1.setEnabled(isEnabled);
        spinnerBias2.setEnabled(isEnabled);
        spinnerBias3.setEnabled(isEnabled);
        spinnerBias4.setEnabled(isEnabled);
        spinnerBias5.setEnabled(isEnabled);
    }
    
    private void switchConfigurations(boolean overrideAIdefaults) {
        setCustomSettingsComponentsStates(overrideAIdefaults);
        setDefaultSettingsComponentStates(!overrideAIdefaults);
    }
    
    private void loadSpinnersValues() {
        spinnerSteps.setValue(settings.getMaxTreeLevel());
        spinnerBias1.setValue(settings.getBiasScore(REGION_1));
        spinnerBias2.setValue(settings.getBiasScore(REGION_2));
        spinnerBias3.setValue(settings.getBiasScore(REGION_3));
        spinnerBias4.setValue(settings.getBiasScore(REGION_4));
        spinnerBias5.setValue(settings.getBiasScore(REGION_5));
        readCurrentSettings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupDifficulty = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        radioEasy = new javax.swing.JRadioButton();
        radioNormal = new javax.swing.JRadioButton();
        radioHard = new javax.swing.JRadioButton();
        radioInsane = new javax.swing.JRadioButton();
        labelOverride = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        checkOverrideAIConfig = new javax.swing.JCheckBox();
        labelFigure = new javax.swing.JLabel();
        labelSteps = new javax.swing.JLabel();
        spinnerSteps = new javax.swing.JSpinner();
        spinnerBias1 = new javax.swing.JSpinner();
        labelBias1 = new javax.swing.JLabel();
        spinnerBias2 = new javax.swing.JSpinner();
        spinnerBias3 = new javax.swing.JSpinner();
        spinnerBias4 = new javax.swing.JSpinner();
        spinnerBias5 = new javax.swing.JSpinner();
        labelBias2 = new javax.swing.JLabel();
        labelBias3 = new javax.swing.JLabel();
        labelBias4 = new javax.swing.JLabel();
        labelBias5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Game difficulty"));

        groupDifficulty.add(radioEasy);
        radioEasy.setSelected(true);
        radioEasy.setText("Easy");
        radioEasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioEasyActionPerformed(evt);
            }
        });

        groupDifficulty.add(radioNormal);
        radioNormal.setText("Normal");
        radioNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNormalActionPerformed(evt);
            }
        });

        groupDifficulty.add(radioHard);
        radioHard.setText("Hard");
        radioHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHardActionPerformed(evt);
            }
        });

        groupDifficulty.add(radioInsane);
        radioInsane.setText("Insane");
        radioInsane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioInsaneActionPerformed(evt);
            }
        });

        labelOverride.setText("* this settings will be overriden ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioInsane)
                    .addComponent(radioHard)
                    .addComponent(radioNormal)
                    .addComponent(radioEasy))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelOverride, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(radioEasy)
                .addGap(18, 18, 18)
                .addComponent(radioNormal)
                .addGap(18, 18, 18)
                .addComponent(radioHard)
                .addGap(18, 18, 18)
                .addComponent(radioInsane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(labelOverride)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184))
        );

        jTabbedPane1.addTab("General", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Advanced AI settings"));
        jPanel5.setEnabled(false);

        checkOverrideAIConfig.setText("Override default configuration");
        checkOverrideAIConfig.setToolTipText("Click to set your own configuration to AI behavior!");
        checkOverrideAIConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOverrideAIConfigActionPerformed(evt);
            }
        });

        labelSteps.setText("Steps ahead:");

        spinnerSteps.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        spinnerBias1.setModel(new javax.swing.SpinnerNumberModel());

        labelBias1.setText("Region 1 bias:");

        spinnerBias2.setModel(new javax.swing.SpinnerNumberModel());

        spinnerBias3.setModel(new javax.swing.SpinnerNumberModel());

        spinnerBias4.setModel(new javax.swing.SpinnerNumberModel());

        spinnerBias5.setModel(new javax.swing.SpinnerNumberModel());

        labelBias2.setText("Region 2 bias:");

        labelBias3.setText("Region 3 bias:");

        labelBias4.setText("Region 4 bias:");

        labelBias5.setText("Region 5 bias:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFigure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(checkOverrideAIConfig)
                        .addGap(0, 108, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSteps, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBias1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBias2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBias3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBias4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBias5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(spinnerBias5)
                            .addComponent(spinnerBias4)
                            .addComponent(spinnerBias3)
                            .addComponent(spinnerBias2)
                            .addComponent(spinnerBias1)
                            .addComponent(spinnerSteps, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                        .addGap(48, 48, 48)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkOverrideAIConfig)
                .addGap(18, 18, 18)
                .addComponent(labelFigure, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSteps)
                    .addComponent(spinnerSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerBias1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBias1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerBias2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBias2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerBias3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBias3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerBias4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBias4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerBias5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBias5))
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("AI Options", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 64));
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 64));
        jPanel2.setPreferredSize(new java.awt.Dimension(516, 48));

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkOverrideAIConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOverrideAIConfigActionPerformed
        switchConfigurations(checkOverrideAIConfig.isSelected());
    }//GEN-LAST:event_checkOverrideAIConfigActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        settings = null;
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (checkOverrideAIConfig.isSelected()) {
            int[] customConfiguration = new int[6];
            customConfiguration[0] = (int) spinnerSteps.getValue();
            customConfiguration[1] = (int) spinnerBias1.getValue();
            customConfiguration[2] = (int) spinnerBias2.getValue();
            customConfiguration[3] = (int) spinnerBias3.getValue();
            customConfiguration[4] = (int) spinnerBias4.getValue();
            customConfiguration[5] = (int) spinnerBias5.getValue();
            settings.loadCustomConfiguration(customConfiguration);
        }
        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    private void radioEasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioEasyActionPerformed
        settings = new AISettings();
        settings.loadDefaultPreset("easy");
        loadSpinnersValues();
    }//GEN-LAST:event_radioEasyActionPerformed

    private void radioNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNormalActionPerformed
        settings = new AISettings();
        settings.loadDefaultPreset("normal");
        loadSpinnersValues();
    }//GEN-LAST:event_radioNormalActionPerformed

    private void radioHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHardActionPerformed
        settings = new AISettings();
        settings.loadDefaultPreset("hard");
        loadSpinnersValues();
    }//GEN-LAST:event_radioHardActionPerformed

    private void radioInsaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioInsaneActionPerformed
        settings = new AISettings();
        settings.loadDefaultPreset("insane");
        loadSpinnersValues();
    }//GEN-LAST:event_radioInsaneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GameOptions dialog = new GameOptions(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    */
        loadSettings(null, new AISettings());
    }

    private void readCurrentSettings() {
        int presetOption = settings.getPresetOption();
        System.err.println("PRESET: " + presetOption);
        if (presetOption >= 0) {
            switchConfigurations(false);
        } else {
            switchConfigurations(true);
        }
        switch (presetOption) {
            case 0:
                radioEasy.setSelected(true);
                break;
            case 1:
                radioNormal.setSelected(true);
                break;
            case 3:
                radioHard.setSelected(true);
                break;
            case 6:
                radioInsane.setSelected(true);
                break;
        }
    }
    
    public static AISettings loadSettings(Frame parentComponent, AISettings previousSettings) {
        GameOptions optionsDialog = new GameOptions(parentComponent, true, previousSettings);
        System.err.println(optionsDialog.settings);
        return optionsDialog.settings;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JCheckBox checkOverrideAIConfig;
    private javax.swing.ButtonGroup groupDifficulty;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelBias1;
    private javax.swing.JLabel labelBias2;
    private javax.swing.JLabel labelBias3;
    private javax.swing.JLabel labelBias4;
    private javax.swing.JLabel labelBias5;
    private javax.swing.JLabel labelFigure;
    private javax.swing.JLabel labelOverride;
    private javax.swing.JLabel labelSteps;
    private javax.swing.JRadioButton radioEasy;
    private javax.swing.JRadioButton radioHard;
    private javax.swing.JRadioButton radioInsane;
    private javax.swing.JRadioButton radioNormal;
    private javax.swing.JSpinner spinnerBias1;
    private javax.swing.JSpinner spinnerBias2;
    private javax.swing.JSpinner spinnerBias3;
    private javax.swing.JSpinner spinnerBias4;
    private javax.swing.JSpinner spinnerBias5;
    private javax.swing.JSpinner spinnerSteps;
    // End of variables declaration//GEN-END:variables
}
